{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"JetBot JetBot is an open-source robot based on NVIDIA Jetson Nano. You'll like it because... It's Affordable JetBot costs less than $250 in parts, including Jetson Nano. The DIY kit includes a bill of materials which you must purchase and a 3D printed. If you're looking to get up and running as quick as possible, there are also many third party kits available that come pre-bundled. It's Educational JetBot includes a set of tutorials which cover basic robotics concepts like programatic motor control, to more advanced topics like training a custom AI for avoiding collisions. What you'll learn isn't limited to JetBot. You'll learn concepts related to neural network data collection and training that extend as far as your imagination. It's Easy to Setup JetBot is programmed from your web browser. Just connect your JetBot to Wifi and launch the JetBot Docker container . This enables JetBot's web programming environment, which is available even after the JetBot reboots. Once your JetBot boots, just type it's IP address into your web browser and start programming. It's Fun! We built JetBot to make exploring ideas related to robotics as fun as possible. In effect, it's a portable, battery powered AI computer with a camera that's super easy to program. This makes it the perfect platform for trying new ideas related to AI, image processing and robotics. Our experimentations have led us to new projects like JetRacer , and we're excited to see where your experimentation takes you. Get Started To get started with JetBot, follow the Quick Start instructions. If you run into any issues while working with JetBot, please let us know !","title":"Home"},{"location":"index.html#jetbot","text":"JetBot is an open-source robot based on NVIDIA Jetson Nano. You'll like it because...","title":"JetBot"},{"location":"index.html#its-affordable","text":"JetBot costs less than $250 in parts, including Jetson Nano. The DIY kit includes a bill of materials which you must purchase and a 3D printed. If you're looking to get up and running as quick as possible, there are also many third party kits available that come pre-bundled.","title":"It's Affordable"},{"location":"index.html#its-educational","text":"JetBot includes a set of tutorials which cover basic robotics concepts like programatic motor control, to more advanced topics like training a custom AI for avoiding collisions. What you'll learn isn't limited to JetBot. You'll learn concepts related to neural network data collection and training that extend as far as your imagination.","title":"It's Educational"},{"location":"index.html#its-easy-to-setup","text":"JetBot is programmed from your web browser. Just connect your JetBot to Wifi and launch the JetBot Docker container . This enables JetBot's web programming environment, which is available even after the JetBot reboots. Once your JetBot boots, just type it's IP address into your web browser and start programming.","title":"It's Easy to Setup"},{"location":"index.html#its-fun","text":"We built JetBot to make exploring ideas related to robotics as fun as possible. In effect, it's a portable, battery powered AI computer with a camera that's super easy to program. This makes it the perfect platform for trying new ideas related to AI, image processing and robotics. Our experimentations have led us to new projects like JetRacer , and we're excited to see where your experimentation takes you.","title":"It's Fun!"},{"location":"index.html#get-started","text":"To get started with JetBot, follow the Quick Start instructions. If you run into any issues while working with JetBot, please let us know !","title":"Get Started"},{"location":"CONTRIBUTING.html","text":"Contributing Documenting We use mkdocs-material to easily generate documentation from markdown. This simplifies the relationship between our documentation and raw github files. Mkdocs generates documentation from the docs folder. We prefer that the repository has inline documentation right next to the code. This makes the documentation readable in it's raw format on github. To accomplish this, we add symbolic links from the docs directory to folders and files from the repository that we wish to include in the documentation. Testing To quickly test the version of the documentation you're using, without commiting anything to the gh-pages branch, run the following command. mkdocs serve --dev-addr = 0 .0.0.0:8000 Deploying We use mike to maintain multiple versions of the documentation. To build the documentation with mike, call mike deploy <tag> This will build the documentation, and add a static version of the site under the gh-pages branch. For example, to deploy the master documentation we do mike deploy master To set the default documentation version to master we would do. mike set-default master To push the documentation to Github Pages. mike deploy master --push Adding a new page To add a new documentation page, you will need to first add the file either directly to the docs folder, or to a different folder with a symbolic link to the docs folder. For example, say we wanted to add a page named MAINTAINERS.md to the root of the project First, create the file at the root of the project touch MAINTAINERS.md Next, add a symbolic link to the docs folder cd docs ln -s ../MAINTAINERS.md . Finally, add the file to our navigation in mkdocs.yml - nav : - Reference : - 'Maintainers' : MAINTAINERS.md Now, when you build the documentation you should see the page that we've added in the \"Reference\" section with the title \"Maintainers\".","title":"Contributing"},{"location":"CONTRIBUTING.html#contributing","text":"","title":"Contributing"},{"location":"CONTRIBUTING.html#documenting","text":"We use mkdocs-material to easily generate documentation from markdown. This simplifies the relationship between our documentation and raw github files. Mkdocs generates documentation from the docs folder. We prefer that the repository has inline documentation right next to the code. This makes the documentation readable in it's raw format on github. To accomplish this, we add symbolic links from the docs directory to folders and files from the repository that we wish to include in the documentation.","title":"Documenting"},{"location":"CONTRIBUTING.html#testing","text":"To quickly test the version of the documentation you're using, without commiting anything to the gh-pages branch, run the following command. mkdocs serve --dev-addr = 0 .0.0.0:8000","title":"Testing"},{"location":"CONTRIBUTING.html#deploying","text":"We use mike to maintain multiple versions of the documentation. To build the documentation with mike, call mike deploy <tag> This will build the documentation, and add a static version of the site under the gh-pages branch. For example, to deploy the master documentation we do mike deploy master To set the default documentation version to master we would do. mike set-default master To push the documentation to Github Pages. mike deploy master --push","title":"Deploying"},{"location":"CONTRIBUTING.html#adding-a-new-page","text":"To add a new documentation page, you will need to first add the file either directly to the docs folder, or to a different folder with a symbolic link to the docs folder. For example, say we wanted to add a page named MAINTAINERS.md to the root of the project First, create the file at the root of the project touch MAINTAINERS.md Next, add a symbolic link to the docs folder cd docs ln -s ../MAINTAINERS.md . Finally, add the file to our navigation in mkdocs.yml - nav : - Reference : - 'Maintainers' : MAINTAINERS.md Now, when you build the documentation you should see the page that we've added in the \"Reference\" section with the title \"Maintainers\".","title":"Adding a new page"},{"location":"authors.html","text":"","title":"Authors"},{"location":"docker/index.html","text":"Docker This directory contains scripts to build the JetBot docker containers. Quick Start Step 1 - Build All Containers cd docker ./build.sh Step 2 - Enable all containers sudo systemctl enable docker # enable docker daemon at boot ./enable.sh $HOME # we'll use home directory as working directory, set this as you please. Now you can go to https://<jetbot_ip>:8888 and start programming JetBot from your web browser. The directory you specify to ./run.sh will be mounted as a volume in the jupyter container at the location /workspace . This means the work you in the /workspace folder inside container is saved. Please note, if you work outside of that directory it will be lost when the container shuts down.","title":"Docker"},{"location":"docker/index.html#docker","text":"This directory contains scripts to build the JetBot docker containers.","title":"Docker"},{"location":"docker/index.html#quick-start","text":"","title":"Quick Start"},{"location":"docker/index.html#step-1-build-all-containers","text":"cd docker ./build.sh","title":"Step 1 - Build All Containers"},{"location":"docker/index.html#step-2-enable-all-containers","text":"sudo systemctl enable docker # enable docker daemon at boot ./enable.sh $HOME # we'll use home directory as working directory, set this as you please. Now you can go to https://<jetbot_ip>:8888 and start programming JetBot from your web browser. The directory you specify to ./run.sh will be mounted as a volume in the jupyter container at the location /workspace . This means the work you in the /workspace folder inside container is saved. Please note, if you work outside of that directory it will be lost when the container shuts down.","title":"Step 2 - Enable all containers"},{"location":"docker/base/index.html","text":"Base Container This container includes PyTorch TensorFlow Jupyter Lab JetBot Python API Among other small related dependencies. cd docker/base ./build.sh Other containers depend on this, it's typically not run directly. You could build your own container on top of this.","title":"Base Container"},{"location":"docker/base/index.html#base-container","text":"This container includes PyTorch TensorFlow Jupyter Lab JetBot Python API Among other small related dependencies. cd docker/base ./build.sh Other containers depend on this, it's typically not run directly. You could build your own container on top of this.","title":"Base Container"},{"location":"docker/camera/index.html","text":"Camera Container This container includes A launch script to publish camera images using ZMQ for access in other containers Build cd docker/camera ./build.sh Run cd docker/camera ./enable.sh","title":"Camera Container"},{"location":"docker/camera/index.html#camera-container","text":"This container includes A launch script to publish camera images using ZMQ for access in other containers","title":"Camera Container"},{"location":"docker/camera/index.html#build","text":"cd docker/camera ./build.sh","title":"Build"},{"location":"docker/camera/index.html#run","text":"cd docker/camera ./enable.sh","title":"Run"},{"location":"docker/display/index.html","text":"Display Container This container includes A launch script to show JetBot stats on PiOLED display Build cd docker/display ./build.sh Run cd docker/display ./enable.sh","title":"Display Container"},{"location":"docker/display/index.html#display-container","text":"This container includes A launch script to show JetBot stats on PiOLED display","title":"Display Container"},{"location":"docker/display/index.html#build","text":"cd docker/display ./build.sh","title":"Build"},{"location":"docker/display/index.html#run","text":"cd docker/display ./enable.sh","title":"Run"},{"location":"docker/jupyter/index.html","text":"Jupyter Container This container includes A launch script to run jupyter lab at the specified working directory Build cd docker/jupyter ./build.sh Run cd docker/jupyter ./enable.sh $HOME","title":"Jupyter Container"},{"location":"docker/jupyter/index.html#jupyter-container","text":"This container includes A launch script to run jupyter lab at the specified working directory","title":"Jupyter Container"},{"location":"docker/jupyter/index.html#build","text":"cd docker/jupyter ./build.sh","title":"Build"},{"location":"docker/jupyter/index.html#run","text":"cd docker/jupyter ./enable.sh $HOME","title":"Run"},{"location":"docker/models/index.html","text":"Models Container","title":"Models Container"},{"location":"docker/models/index.html#models-container","text":"","title":"Models Container"},{"location":"notebooks/index.html","text":"Examples","title":"Notebooks"},{"location":"notebooks/index.html#examples","text":"","title":"Examples"},{"location":"notebooks/basic_motion/index.html","text":"Basic Motion","title":"Basic Motion"},{"location":"notebooks/basic_motion/index.html#basic-motion","text":"","title":"Basic Motion"},{"location":"notebooks/collision_avoidance/index.html","text":"Collision Avoidance","title":"Collision Avoidance"},{"location":"notebooks/collision_avoidance/index.html#collision-avoidance","text":"","title":"Collision Avoidance"},{"location":"notebooks/object_following/index.html","text":"Object Following","title":"Object Following"},{"location":"notebooks/object_following/index.html#object-following","text":"","title":"Object Following"},{"location":"notebooks/road_following/index.html","text":"Road Following","title":"Road Following"},{"location":"notebooks/road_following/index.html#road-following","text":"","title":"Road Following"},{"location":"notebooks/teleoperation/index.html","text":"Teleoperation","title":"Teleoperation"},{"location":"notebooks/teleoperation/index.html#teleoperation","text":"","title":"Teleoperation"},{"location":"platform/index.html","text":"","title":"Index"},{"location":"platform/3d_printing.html","text":"This page has useful information related to printing the JetBot chassis using a 3D printer. There are two methods for printing JetBot Print by yourself Use a printing service Method 1 - Print by yourself If you have a 3D printer, we recommend printing the JetBot components yourself! Print facts Below are some facts related to printing a single JetBot. Print time: 10-12 hours Material used: < 100 grams Material cost: ~ $2 Tested Printers We've tested that the following printers are able to print JetBot successfully. Model Cost URL Monoprice Voxel $320 Amazon Ultimaker 2+ $2500 Amazon Tested Filaments Based on our experience, we recommend using PLA filament when printing JetBot. Below is a collection of filaments that we have tested with the Monoprice Voxel 3D printer. Brand Thickness Material Color URL Notes AmazonBasics 1.75mm PLA Silver Amazon Smooth, dark metallic finish AmazonBasics 1.75mm PLA Neon Green Amazon Smooth, pale finish AmazonBasics 1.75mm PLA Yellow Amazon Bold yellow, slightly translucent AmazonBasics 1.75mm PLA Purple Amazon Smooth, pale finish Printing and slicing configuration STL unit: mm Print orientation Slice configuration (Cura) Method 2 - Use a printing service If you don't have a 3D printer on hand, and are not interested in purchasing one, there are external services that can print the chassis for you. Below are some quotes from popular 3D printing services Please note, we have not tested these services yet ourselves, so please proceed with caution. If you find a print service that worked well for you, we'd love to hear! Please let us know by creating an issue on GitHub or mentioning it in the chat channel Service Quote 3DHubs $36.66 Jinxbot $91.42 Sculpteo ~$100","title":"3D Printing"},{"location":"platform/3d_printing.html#method-1-print-by-yourself","text":"If you have a 3D printer, we recommend printing the JetBot components yourself!","title":"Method 1 - Print by yourself"},{"location":"platform/3d_printing.html#print-facts","text":"Below are some facts related to printing a single JetBot. Print time: 10-12 hours Material used: < 100 grams Material cost: ~ $2","title":"Print facts"},{"location":"platform/3d_printing.html#tested-printers","text":"We've tested that the following printers are able to print JetBot successfully. Model Cost URL Monoprice Voxel $320 Amazon Ultimaker 2+ $2500 Amazon","title":"Tested Printers"},{"location":"platform/3d_printing.html#tested-filaments","text":"Based on our experience, we recommend using PLA filament when printing JetBot. Below is a collection of filaments that we have tested with the Monoprice Voxel 3D printer. Brand Thickness Material Color URL Notes AmazonBasics 1.75mm PLA Silver Amazon Smooth, dark metallic finish AmazonBasics 1.75mm PLA Neon Green Amazon Smooth, pale finish AmazonBasics 1.75mm PLA Yellow Amazon Bold yellow, slightly translucent AmazonBasics 1.75mm PLA Purple Amazon Smooth, pale finish","title":"Tested Filaments"},{"location":"platform/3d_printing.html#printing-and-slicing-configuration","text":"STL unit: mm Print orientation Slice configuration (Cura)","title":"Printing and slicing configuration"},{"location":"platform/3d_printing.html#method-2-use-a-printing-service","text":"If you don't have a 3D printer on hand, and are not interested in purchasing one, there are external services that can print the chassis for you. Below are some quotes from popular 3D printing services Please note, we have not tested these services yet ourselves, so please proceed with caution. If you find a print service that worked well for you, we'd love to hear! Please let us know by creating an issue on GitHub or mentioning it in the chat channel Service Quote 3DHubs $36.66 Jinxbot $91.42 Sculpteo ~$100","title":"Method 2 - Use a printing service"},{"location":"platform/bill_of_materials.html","text":"This page lists everything you need to build JetBot, along with purchasing links from popular vendors. Some of the parts are 3D printed. We provide the STL files needed to print these parts. Please see our 3d printing page for tips on printing. Common parts You need these components for each JetBot. Part Quantity Cost URL Notes Jetson Nano 1 $99.00 NVIDIA Micro SD card 1 $13.99 Amazon 64GB Power supply 1 $7.50 Adafruit Micro USB, 5V, 2.5A Motor 2 $5.90 Adafruit , Amazon(1) , Amazon(2) \"TT\" form factor Motor Driver 1 $19.95 Adafruit , Amazon Caster ball 1 $6.30 Amazon 1-inch diameter Battery 1 $15.99 Amazon 2x 5V/3A output, 10,000mAh USB cable pack 1 $6.99 Amazon Type A to Micro, right angle PiOLED display 1 $14.95 Adafruit , Amazon PiOLED header 1 $5.95 Adafruit , Amazon , Sparkfun 2x(3+) right angle male Chassis 1 -- STL file see 3D printing Camera Mount 1 -- STL file see 3D printing Camera You need a camera with appropriate sensor and field of view for each JetBot. Select an option and get the parts specified. Option 1 (default) - Leopard Imaging Camera Part Quantity Cost URL Notes Camera 1 $29.00 Leopard Imaging LI-IMX219-MIPI-FF-NANO- H145 Option 2 - RPi Camera V2 + Lens Attachment Part Quantity Cost URL Notes Camera 1 $23.90 Amazon , Adafruit Raspberry Pi Camera V2 Camera lens attachment 1 $18.99 Amazon(1) , Amazon(2) , eBay 160-degree FoV WiFi You need a WiFi solution for each JetBot. Select an option and get the parts specified. Option 1 (default) - M2 Card + Antennas Part Quantity Cost URL Notes WiFi card 1 $18.95 Amazon , NewEgg M2, Intel Wireless-AC 8265 WiFi antenna 2 $5.06 Arrow U.FL connectors Option 2 - USB Dongle Notice (5/17/2019): We're currently tracking an issue with the Linux driver for the below USB WiFi dongle that may cause connectivity issues. You can find information in this forum post . For now, we recommend using Option 1 listed above. Thank you to those who discovered this issue! Part Quantity Cost URL Notes WiFi Dongle 1 $9.99 Amazon RTL8192U chipset Wheels You need wheels with a \"TT\" motor shaft connector for each JetBot. Select an option and get the parts specified. Option 1 - 60mm Part Quantity Cost URL Notes Wheel 2 $5.00 Adafruit 60mm diameter Caster base 1 -- STL file for 60mm wheel Caster shroud 1 -- STL file for 60mm wheel Option 2 - 65mm Part Quantity Cost URL Notes Wheel 2 $3.00 Adafruit 65mm diameter Caster base 1 -- STL file for 65mm wheel Caster shroud 1 -- STL file for 65mm wheel Assembly Hardware You need the following parts to build JetBot. They come in packs, so order the quantity you need for the number of JetBots you are going to build. Part Qty per JetBot Qty per pack Cost per JetBot URL Notes Adhesive pads 2 48 $0.14 Amazon M2 screw 20 100 $1.29 Amazon 8mm long, self tapping M3 screw 4 60 $0.47 Amazon 25mm long M3 nut 4 100 $0.24 Amazon Jumper wires 4 40 $0.13 Amazon Female-female, ~20cm","title":"Bill of Materials"},{"location":"platform/bill_of_materials.html#common-parts","text":"You need these components for each JetBot. Part Quantity Cost URL Notes Jetson Nano 1 $99.00 NVIDIA Micro SD card 1 $13.99 Amazon 64GB Power supply 1 $7.50 Adafruit Micro USB, 5V, 2.5A Motor 2 $5.90 Adafruit , Amazon(1) , Amazon(2) \"TT\" form factor Motor Driver 1 $19.95 Adafruit , Amazon Caster ball 1 $6.30 Amazon 1-inch diameter Battery 1 $15.99 Amazon 2x 5V/3A output, 10,000mAh USB cable pack 1 $6.99 Amazon Type A to Micro, right angle PiOLED display 1 $14.95 Adafruit , Amazon PiOLED header 1 $5.95 Adafruit , Amazon , Sparkfun 2x(3+) right angle male Chassis 1 -- STL file see 3D printing Camera Mount 1 -- STL file see 3D printing","title":"Common parts"},{"location":"platform/bill_of_materials.html#camera","text":"You need a camera with appropriate sensor and field of view for each JetBot. Select an option and get the parts specified.","title":"Camera"},{"location":"platform/bill_of_materials.html#option-1-default-leopard-imaging-camera","text":"Part Quantity Cost URL Notes Camera 1 $29.00 Leopard Imaging LI-IMX219-MIPI-FF-NANO- H145","title":"Option 1 (default) - Leopard Imaging Camera"},{"location":"platform/bill_of_materials.html#option-2-rpi-camera-v2-lens-attachment","text":"Part Quantity Cost URL Notes Camera 1 $23.90 Amazon , Adafruit Raspberry Pi Camera V2 Camera lens attachment 1 $18.99 Amazon(1) , Amazon(2) , eBay 160-degree FoV","title":"Option 2 - RPi Camera V2 + Lens Attachment"},{"location":"platform/bill_of_materials.html#wifi","text":"You need a WiFi solution for each JetBot. Select an option and get the parts specified.","title":"WiFi"},{"location":"platform/bill_of_materials.html#option-1-default-m2-card-antennas","text":"Part Quantity Cost URL Notes WiFi card 1 $18.95 Amazon , NewEgg M2, Intel Wireless-AC 8265 WiFi antenna 2 $5.06 Arrow U.FL connectors","title":"Option 1 (default) - M2 Card + Antennas"},{"location":"platform/bill_of_materials.html#option-2-usb-dongle","text":"Notice (5/17/2019): We're currently tracking an issue with the Linux driver for the below USB WiFi dongle that may cause connectivity issues. You can find information in this forum post . For now, we recommend using Option 1 listed above. Thank you to those who discovered this issue! Part Quantity Cost URL Notes WiFi Dongle 1 $9.99 Amazon RTL8192U chipset","title":"Option 2 - USB Dongle"},{"location":"platform/bill_of_materials.html#wheels","text":"You need wheels with a \"TT\" motor shaft connector for each JetBot. Select an option and get the parts specified.","title":"Wheels"},{"location":"platform/bill_of_materials.html#option-1-60mm","text":"Part Quantity Cost URL Notes Wheel 2 $5.00 Adafruit 60mm diameter Caster base 1 -- STL file for 60mm wheel Caster shroud 1 -- STL file for 60mm wheel","title":"Option 1 - 60mm"},{"location":"platform/bill_of_materials.html#option-2-65mm","text":"Part Quantity Cost URL Notes Wheel 2 $3.00 Adafruit 65mm diameter Caster base 1 -- STL file for 65mm wheel Caster shroud 1 -- STL file for 65mm wheel","title":"Option 2 - 65mm"},{"location":"platform/bill_of_materials.html#assembly-hardware","text":"You need the following parts to build JetBot. They come in packs, so order the quantity you need for the number of JetBots you are going to build. Part Qty per JetBot Qty per pack Cost per JetBot URL Notes Adhesive pads 2 48 $0.14 Amazon M2 screw 20 100 $1.29 Amazon 8mm long, self tapping M3 screw 4 60 $0.47 Amazon 25mm long M3 nut 4 100 $0.24 Amazon Jumper wires 4 40 $0.13 Amazon Female-female, ~20cm","title":"Assembly Hardware"},{"location":"platform/hardware_setup.html","text":"This page details the hardware setup instructions for creating JetBot Tools needed To build JetBot you'll need the following tools Pliers Wire flush cutters/wire stripper Phillips screwdriver (+ Hex screwdriver for M2 hex socket screws ) Soldering iron and solder (optional) Precision Electronics Tweezers Assembly Step 1 - Clean 3D printed parts Remove support material from motor sockets using pliers Remove support material from all surfaces, openings and screw holes using pliers, tweezers, and/or fingernails File material from openings if they are too tight Step 2 - Mount motors Cut and remove the zip tie from each motor Tuck the wires beneath transparent band to prevent stress on solder joints Insert each motor into the 3D printed chassis Secure each motor with 2x M3x25mm screws Step 3 - Solder motor driver Break away 3-pin and 2-pin male headers from header link that comes with motor driver package Join two of the screw terminal blocks to create a 4-pin screw terminal Solder the 2-pin and 4-pin screw terminals to motor driver Solder the 2-pin and 3-pin male headers to motor driver Pay careful attention to the position of the 3-pin header. It is offset by 1-pin from the corner. Step 4 - Strip motor driver power cable Select the depicted micro USB from the pack Pay careful attention to the image. The cables are not identical. The other micro USB cable will be used to power the Jetson Nano. Using the wrong power cable for Nano will block it's Ethernet port. Cut the depicted cable roughly ~20cm from the type-A terminal Strip the rubber coating ~3cm from the cut Remove the green / white wires and metal shielding. Strip the red and black wires about ~5mm from cut (optional) Twist the exposed strand wire and coat with solder Step 5 - Mount motor driver Route the spliced cable through chassis Secure exposed red (+) and black (-) wires to the power terminals on motor driver > Pay attention to the markings on the motor driver. Incorrect wiring could damage the driver. Route the spliced cable under the motor driver to organize and prevent stress on screw terminal Secure motor driver to chassis using self taping screws Secure left and right motor wires to motor screw terminals > Notice (3/11/2019): We made a slight mistake: the red and black wires for the left and right motor are actually flipped in the image shown above. This will not cause damage, but the motors will spin backwards. Please flip them to the correct orientation. Step 6 - Mount WiFi antennas Secure one patch antenna to the underside of top plate Secure the other patch antenna at edge of battery bay Route connectors as shown Step 7 - Remove Jetson Nano module from developer kit Remove standoff screws from Jetson Nano module Release the side latches of SODIMM connector using hands Slide Jetson Nano module out of SODIMM connector Step 8 - Attach WiFi module to developer kit Attach developer kit to chassis using self taping screws Snap antennae on to WiFi module using fingers Remove the screw from developer kit by the M.2 socket Insert WiFi module into M.2 slot on developer kit Fasten WiFi module to developer kit with screw removed in (3) Re-attach the Jetson Nano module to developer kit Step 9 - Mount ball caster Place the caster ball inside of shroud Insert the caster base into shroud, securing the ball > If the socket is too tight, file it some. Attach the assembled caster onto the chassis with self taping screws > It will share two screw holes with the motor driver. Step 10 - Solder header onto PiOLED display Secure the 6-pin right angle header to PiOLED display by some method Solder the pins depicted (3.3V, SDA, SCL, and GND solder seen when zoomed in on right image) > The pins are close to the display screen, be careful to avoid the screen with soldering iron tip. Step 11 - Wire motor driver to PiOLED display Select 4 wire segment of female-female jumper cables. > We use brown, red, orange, yellow segment. You can map the colors accordingly. Attach 3.3V (red), GND (brown), SDA (orange), and SCL (yellow) to motor driver as shown Route the 4 wire jumper cable segment through chassis Attach red, brown, orange and yellow wires to right angle header as depicted Pay close attention! Reversing the red / brown wires could damage the system. Step 12 - Mount camera Attach the camera to the camera mount using 4x self tapping screws Attach the camera mount to chassis with 4x self tapping screws Insert the other end of ribbon cable into Jetson Nano developer kit (optional) Tuck the ribbon cable against heat sink to organize Step 13 - Attach wide angle sensor Peel off the original camera sensor Remove any excess adhesive material Remove the adhesive film cover from wide angle replacement sensor Attach wide angle replacement sensor to camera module Ensure the sensor connector is fastened to camera module Step 14 - Mount battery Attach double sided adhesive tabs to each end of battery, leaving some tab exposed Holding robot upside down, slide battery into battery bay Holding the battery in place, flip the robot and secure battery to chassis Step 15 - Organize wires Route USB cables through chassis to organize and prevent dragging Finished JetBot Once finished, your JetBot should look similar to this.","title":"Hardware Setup"},{"location":"platform/hardware_setup.html#tools-needed","text":"To build JetBot you'll need the following tools Pliers Wire flush cutters/wire stripper Phillips screwdriver (+ Hex screwdriver for M2 hex socket screws ) Soldering iron and solder (optional) Precision Electronics Tweezers","title":"Tools needed"},{"location":"platform/hardware_setup.html#assembly","text":"","title":"Assembly"},{"location":"platform/hardware_setup.html#step-1-clean-3d-printed-parts","text":"Remove support material from motor sockets using pliers Remove support material from all surfaces, openings and screw holes using pliers, tweezers, and/or fingernails File material from openings if they are too tight","title":"Step 1 - Clean 3D printed parts"},{"location":"platform/hardware_setup.html#step-2-mount-motors","text":"Cut and remove the zip tie from each motor Tuck the wires beneath transparent band to prevent stress on solder joints Insert each motor into the 3D printed chassis Secure each motor with 2x M3x25mm screws","title":"Step 2 - Mount motors"},{"location":"platform/hardware_setup.html#step-3-solder-motor-driver","text":"Break away 3-pin and 2-pin male headers from header link that comes with motor driver package Join two of the screw terminal blocks to create a 4-pin screw terminal Solder the 2-pin and 4-pin screw terminals to motor driver Solder the 2-pin and 3-pin male headers to motor driver Pay careful attention to the position of the 3-pin header. It is offset by 1-pin from the corner.","title":"Step 3 - Solder motor driver"},{"location":"platform/hardware_setup.html#step-4-strip-motor-driver-power-cable","text":"Select the depicted micro USB from the pack Pay careful attention to the image. The cables are not identical. The other micro USB cable will be used to power the Jetson Nano. Using the wrong power cable for Nano will block it's Ethernet port. Cut the depicted cable roughly ~20cm from the type-A terminal Strip the rubber coating ~3cm from the cut Remove the green / white wires and metal shielding. Strip the red and black wires about ~5mm from cut (optional) Twist the exposed strand wire and coat with solder","title":"Step 4 - Strip motor driver power cable"},{"location":"platform/hardware_setup.html#step-5-mount-motor-driver","text":"Route the spliced cable through chassis Secure exposed red (+) and black (-) wires to the power terminals on motor driver > Pay attention to the markings on the motor driver. Incorrect wiring could damage the driver. Route the spliced cable under the motor driver to organize and prevent stress on screw terminal Secure motor driver to chassis using self taping screws Secure left and right motor wires to motor screw terminals > Notice (3/11/2019): We made a slight mistake: the red and black wires for the left and right motor are actually flipped in the image shown above. This will not cause damage, but the motors will spin backwards. Please flip them to the correct orientation.","title":"Step 5 - Mount motor driver"},{"location":"platform/hardware_setup.html#step-6-mount-wifi-antennas","text":"Secure one patch antenna to the underside of top plate Secure the other patch antenna at edge of battery bay Route connectors as shown","title":"Step 6 - Mount WiFi antennas"},{"location":"platform/hardware_setup.html#step-7-remove-jetson-nano-module-from-developer-kit","text":"Remove standoff screws from Jetson Nano module Release the side latches of SODIMM connector using hands Slide Jetson Nano module out of SODIMM connector","title":"Step 7 - Remove Jetson Nano module from developer kit"},{"location":"platform/hardware_setup.html#step-8-attach-wifi-module-to-developer-kit","text":"Attach developer kit to chassis using self taping screws Snap antennae on to WiFi module using fingers Remove the screw from developer kit by the M.2 socket Insert WiFi module into M.2 slot on developer kit Fasten WiFi module to developer kit with screw removed in (3) Re-attach the Jetson Nano module to developer kit","title":"Step 8 - Attach WiFi module to developer kit"},{"location":"platform/hardware_setup.html#step-9-mount-ball-caster","text":"Place the caster ball inside of shroud Insert the caster base into shroud, securing the ball > If the socket is too tight, file it some. Attach the assembled caster onto the chassis with self taping screws > It will share two screw holes with the motor driver.","title":"Step 9 - Mount ball caster"},{"location":"platform/hardware_setup.html#step-10-solder-header-onto-pioled-display","text":"Secure the 6-pin right angle header to PiOLED display by some method Solder the pins depicted (3.3V, SDA, SCL, and GND solder seen when zoomed in on right image) > The pins are close to the display screen, be careful to avoid the screen with soldering iron tip.","title":"Step 10 - Solder header onto PiOLED display"},{"location":"platform/hardware_setup.html#step-11-wire-motor-driver-to-pioled-display","text":"Select 4 wire segment of female-female jumper cables. > We use brown, red, orange, yellow segment. You can map the colors accordingly. Attach 3.3V (red), GND (brown), SDA (orange), and SCL (yellow) to motor driver as shown Route the 4 wire jumper cable segment through chassis Attach red, brown, orange and yellow wires to right angle header as depicted Pay close attention! Reversing the red / brown wires could damage the system.","title":"Step 11 - Wire motor driver to PiOLED display"},{"location":"platform/hardware_setup.html#step-12-mount-camera","text":"Attach the camera to the camera mount using 4x self tapping screws Attach the camera mount to chassis with 4x self tapping screws Insert the other end of ribbon cable into Jetson Nano developer kit (optional) Tuck the ribbon cable against heat sink to organize","title":"Step 12 - Mount camera"},{"location":"platform/hardware_setup.html#step-13-attach-wide-angle-sensor","text":"Peel off the original camera sensor Remove any excess adhesive material Remove the adhesive film cover from wide angle replacement sensor Attach wide angle replacement sensor to camera module Ensure the sensor connector is fastened to camera module","title":"Step 13 - Attach wide angle sensor"},{"location":"platform/hardware_setup.html#step-14-mount-battery","text":"Attach double sided adhesive tabs to each end of battery, leaving some tab exposed Holding robot upside down, slide battery into battery bay Holding the battery in place, flip the robot and secure battery to chassis","title":"Step 14 - Mount battery"},{"location":"platform/hardware_setup.html#step-15-organize-wires","text":"Route USB cables through chassis to organize and prevent dragging","title":"Step 15 - Organize wires"},{"location":"platform/hardware_setup.html#finished-jetbot","text":"Once finished, your JetBot should look similar to this.","title":"Finished JetBot"},{"location":"platform/software_setup.html","text":"This page details the software setup required to run JetBot. Step 1 - Flash JetBot image onto SD card Download the expandable JetBot SD card image jetbot_image_v0p4p0.zip > The above image is based on JetPack 4.3. The previous image based on JetPack 4.2 may be found here: jetbot_image_v0p3p2.zip . Insert an SD card into your desktop machine Using Etcher , select the jetbot_image_v0p4p0.zip image and flash it onto the SD card Remove the SD card from your desktop machine Step 2 - Boot Jetson Nano Insert the SD card into your Jetson Nano (the micro SD card slot is located under the module) Connect the monitor, keyboard, and mouse to the Nano Power on the Jetson Nano by connecting the micro USB charger to the micro USB port Important! We recommend first booting the Jetson Nano once without the piOLED / motor driver connected. This way you can check to make sure the system boots properly from the SD card image without worrying about hardware issues. After you've verified that it boots, reconnect the piOLED, double check your wiring, and boot again. Step 3 - Connect JetBot to WiFi Log in using the user jetbot and password jetbot Connect to a WiFi network using the Ubuntu desktop GUI Your Jetson Nano should now automatically connect to the WiFi at boot and display it's IP address on the piOLED display. Step 4 - Connect to JetBot from web browser After your robot is connected to WiFi, you can connect to the robot from a web browser by performing the following steps Shutdown JetBot using the Ubuntu GUI Unplug your HDMI monitor, USB keyboard, mouse and power supply from Jetson Nano Power the JetBot from the USB battery pack by plugging in the micro-USB cable Wait a bit for JetBot to boot Check the IP address of your robot on the piOLED display screen. Enter this in place of <jetbot_ip_address> in the next command Navigate to http://<jetbot_ip_address>:8888 from your desktop's web browser You shouldn't need to connect your robot to a monitor past this step! Step 5 - Install latest software (optional) The JetBot GitHub repository may contain software that is newer than that pre-installed on the SD card image. To install the latest software: If you haven't already, connect to your robot by going to http://<jetbot_ip_address>:8888 Click the + icon to open the Jupyter Lab launcher Launch a new terminal Get and install the latest JetBot repository from GitHub by entering the following commands git clone https://github.com/NVIDIA-AI-IOT/jetbot cd jetbot sudo python3 setup.py install Replace the old notebooks with the new notebooks by entering sudo apt-get install rsync rsync jetbot/notebooks ~/Notebooks Step 6 - Configure power mode To ensure that the Jetson Nano doesn't draw more current than the battery pack can supply, place the Jetson Nano in 5W mode by calling the following command If you haven't already, connect to your robot by going to http://<jetbot_ip_address>:8888 Click the + icon to open the Jupyter Lab launcher Launch a new terminal Select 5W power mode sudo nvpmodel -m1 5. Verify the Jetson Nano is in 5W power mode sudo nvpmodel -q","title":"Software Setup"},{"location":"platform/software_setup.html#step-1-flash-jetbot-image-onto-sd-card","text":"Download the expandable JetBot SD card image jetbot_image_v0p4p0.zip > The above image is based on JetPack 4.3. The previous image based on JetPack 4.2 may be found here: jetbot_image_v0p3p2.zip . Insert an SD card into your desktop machine Using Etcher , select the jetbot_image_v0p4p0.zip image and flash it onto the SD card Remove the SD card from your desktop machine","title":"Step 1 - Flash JetBot image onto SD card"},{"location":"platform/software_setup.html#step-2-boot-jetson-nano","text":"Insert the SD card into your Jetson Nano (the micro SD card slot is located under the module) Connect the monitor, keyboard, and mouse to the Nano Power on the Jetson Nano by connecting the micro USB charger to the micro USB port Important! We recommend first booting the Jetson Nano once without the piOLED / motor driver connected. This way you can check to make sure the system boots properly from the SD card image without worrying about hardware issues. After you've verified that it boots, reconnect the piOLED, double check your wiring, and boot again.","title":"Step 2 - Boot Jetson Nano"},{"location":"platform/software_setup.html#step-3-connect-jetbot-to-wifi","text":"Log in using the user jetbot and password jetbot Connect to a WiFi network using the Ubuntu desktop GUI Your Jetson Nano should now automatically connect to the WiFi at boot and display it's IP address on the piOLED display.","title":"Step 3 - Connect JetBot to WiFi"},{"location":"platform/software_setup.html#step-4-connect-to-jetbot-from-web-browser","text":"After your robot is connected to WiFi, you can connect to the robot from a web browser by performing the following steps Shutdown JetBot using the Ubuntu GUI Unplug your HDMI monitor, USB keyboard, mouse and power supply from Jetson Nano Power the JetBot from the USB battery pack by plugging in the micro-USB cable Wait a bit for JetBot to boot Check the IP address of your robot on the piOLED display screen. Enter this in place of <jetbot_ip_address> in the next command Navigate to http://<jetbot_ip_address>:8888 from your desktop's web browser You shouldn't need to connect your robot to a monitor past this step!","title":"Step 4 - Connect to JetBot from web browser"},{"location":"platform/software_setup.html#step-5-install-latest-software-optional","text":"The JetBot GitHub repository may contain software that is newer than that pre-installed on the SD card image. To install the latest software: If you haven't already, connect to your robot by going to http://<jetbot_ip_address>:8888 Click the + icon to open the Jupyter Lab launcher Launch a new terminal Get and install the latest JetBot repository from GitHub by entering the following commands git clone https://github.com/NVIDIA-AI-IOT/jetbot cd jetbot sudo python3 setup.py install Replace the old notebooks with the new notebooks by entering sudo apt-get install rsync rsync jetbot/notebooks ~/Notebooks","title":"Step 5 - Install latest software (optional)"},{"location":"platform/software_setup.html#step-6-configure-power-mode","text":"To ensure that the Jetson Nano doesn't draw more current than the battery pack can supply, place the Jetson Nano in 5W mode by calling the following command If you haven't already, connect to your robot by going to http://<jetbot_ip_address>:8888 Click the + icon to open the Jupyter Lab launcher Launch a new terminal Select 5W power mode sudo nvpmodel -m1 5. Verify the Jetson Nano is in 5W power mode sudo nvpmodel -q","title":"Step 6 - Configure power mode"},{"location":"platform/third_party_kits.html","text":"Third Party Kits In addition to the open-source DIY version, several third party JetBot kits using Jetson Nano have emerged. This page details the kits that we're aware of Please note, we do not officially maintain these kits in this GitHub project. Please refer to the vendor's documentation. Please refer to the vendor URL for cost and availability. Some kits may have additional vendors that we aren't aware of or haven't listed yet. If you think these would be helpful for other developers to know, please let us know . Kit URL WaveShare JetBot Kit Amazon , WaveShare WaveShare JetBot Kit (includes Nano) Amazon , WaveShare SparkFun JetBot Kit SparkFun SparkFun JetBot Kit (includes Nano) SparkFun Seeed JetBot Kit Seeedstudio Seeed JetBot Kit (includes Nano) Seeedstudio Silicon Highway JetBot Kit (includes Nano) Silicon Highway FaBo JetBot Kit (includes Nano) FaBo GPUS JetBot Kit (includes Nano) TaoBao","title":"Third Party Kits"},{"location":"platform/third_party_kits.html#third-party-kits","text":"In addition to the open-source DIY version, several third party JetBot kits using Jetson Nano have emerged. This page details the kits that we're aware of Please note, we do not officially maintain these kits in this GitHub project. Please refer to the vendor's documentation. Please refer to the vendor URL for cost and availability. Some kits may have additional vendors that we aren't aware of or haven't listed yet. If you think these would be helpful for other developers to know, please let us know . Kit URL WaveShare JetBot Kit Amazon , WaveShare WaveShare JetBot Kit (includes Nano) Amazon , WaveShare SparkFun JetBot Kit SparkFun SparkFun JetBot Kit (includes Nano) SparkFun Seeed JetBot Kit Seeedstudio Seeed JetBot Kit (includes Nano) Seeedstudio Silicon Highway JetBot Kit (includes Nano) Silicon Highway FaBo JetBot Kit (includes Nano) FaBo GPUS JetBot Kit (includes Nano) TaoBao","title":"Third Party Kits"}]}